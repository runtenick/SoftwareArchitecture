// <auto-generated />
using System;
using EF_Champions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFChampions.Migrations
{
    [DbContext(typeof(ChampDbContext))]
    [Migration("20230312083456_myMgr")]
    partial class myMgr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("ChampionEntityRunePageEntity", b =>
                {
                    b.Property<int>("ChampionsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PagesRuneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChampionsId", "PagesRuneId");

                    b.HasIndex("PagesRuneId");

                    b.ToTable("ChampionEntityRunePageEntity");
                });

            modelBuilder.Entity("ChampionEntitySkillEntity", b =>
                {
                    b.Property<int>("ChampionsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChampionsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ChampionEntitySkillEntity");
                });

            modelBuilder.Entity("EF_Champions.Entities.ChampionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("EF_Champions.Entities.RuneEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RuneFamily")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Runes");
                });

            modelBuilder.Entity("EF_Champions.Entities.RunePageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RunePages");
                });

            modelBuilder.Entity("EF_Champions.Entities.SkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("SkillType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("EF_Champions.Entities.SkinEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChampionForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ChampionForeignKey");

                    b.ToTable("Skins");
                });

            modelBuilder.Entity("RuneEntityRunePageEntity", b =>
                {
                    b.Property<int>("PagesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RunesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PagesId", "RunesId");

                    b.HasIndex("RunesId");

                    b.ToTable("RuneEntityRunePageEntity");
                });

            modelBuilder.Entity("ChampionEntityRunePageEntity", b =>
                {
                    b.HasOne("EF_Champions.Entities.ChampionEntity", null)
                        .WithMany()
                        .HasForeignKey("ChampionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Champions.Entities.RunePageEntity", null)
                        .WithMany()
                        .HasForeignKey("PagesRuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChampionEntitySkillEntity", b =>
                {
                    b.HasOne("EF_Champions.Entities.ChampionEntity", null)
                        .WithMany()
                        .HasForeignKey("ChampionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Champions.Entities.SkillEntity", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF_Champions.Entities.SkinEntity", b =>
                {
                    b.HasOne("EF_Champions.Entities.ChampionEntity", "Champion")
                        .WithMany("Skins")
                        .HasForeignKey("ChampionForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Champion");
                });

            modelBuilder.Entity("RuneEntityRunePageEntity", b =>
                {
                    b.HasOne("EF_Champions.Entities.RunePageEntity", null)
                        .WithMany()
                        .HasForeignKey("PagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Champions.Entities.RuneEntity", null)
                        .WithMany()
                        .HasForeignKey("RunesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF_Champions.Entities.ChampionEntity", b =>
                {
                    b.Navigation("Skins");
                });
#pragma warning restore 612, 618
        }
    }
}
